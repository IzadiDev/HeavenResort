// <auto-generated />
using System;
using HeavenResort_VillaAPI.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace HeavenResort_VillaAPI.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20240311194510_ForeignKeyVillaAndVillaNumber")]
    partial class ForeignKeyVillaAndVillaNumber
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("HeavenResort_VillaAPI.Models.Villa", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Amenity")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Details")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Occupancy")
                        .HasColumnType("int");

                    b.Property<double>("Rate")
                        .HasColumnType("float");

                    b.Property<int>("Sqft")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Villas");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Amenity = "",
                            CreatedDate = new DateTime(2024, 3, 11, 23, 15, 10, 102, DateTimeKind.Local).AddTicks(2157),
                            Details = "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor.",
                            ImageUrl = "~/Assets/Villa1.jpg",
                            Name = "Royal Villa",
                            Occupancy = 5,
                            Rate = 200.0,
                            Sqft = 550,
                            UpdatedDate = new DateTime(2024, 3, 11, 23, 15, 10, 102, DateTimeKind.Local).AddTicks(2157)
                        },
                        new
                        {
                            Id = 2,
                            Amenity = "",
                            CreatedDate = new DateTime(2024, 3, 11, 23, 15, 10, 102, DateTimeKind.Local).AddTicks(2160),
                            Details = "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor.",
                            ImageUrl = "~/Assets/Villa2.jpg",
                            Name = "Luxury Villa",
                            Occupancy = 3,
                            Rate = 300.0,
                            Sqft = 400,
                            UpdatedDate = new DateTime(2024, 3, 11, 23, 15, 10, 102, DateTimeKind.Local).AddTicks(2160)
                        },
                        new
                        {
                            Id = 3,
                            Amenity = "",
                            CreatedDate = new DateTime(2024, 3, 11, 23, 15, 10, 102, DateTimeKind.Local).AddTicks(2163),
                            Details = "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor.",
                            ImageUrl = "~/Assets/Villa3.jpg",
                            Name = "Royal Villa",
                            Occupancy = 4,
                            Rate = 400.0,
                            Sqft = 600,
                            UpdatedDate = new DateTime(2024, 3, 11, 23, 15, 10, 102, DateTimeKind.Local).AddTicks(2163)
                        },
                        new
                        {
                            Id = 4,
                            Amenity = "",
                            CreatedDate = new DateTime(2024, 3, 11, 23, 15, 10, 102, DateTimeKind.Local).AddTicks(2165),
                            Details = "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor.",
                            ImageUrl = "~/Assets/Villa4.jpg",
                            Name = "Royal Villa",
                            Occupancy = 2,
                            Rate = 400.0,
                            Sqft = 250,
                            UpdatedDate = new DateTime(2024, 3, 11, 23, 15, 10, 102, DateTimeKind.Local).AddTicks(2166)
                        },
                        new
                        {
                            Id = 5,
                            Amenity = "",
                            CreatedDate = new DateTime(2024, 3, 11, 23, 15, 10, 102, DateTimeKind.Local).AddTicks(2168),
                            Details = "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor.",
                            ImageUrl = "~/Assets/Villa5.jpg",
                            Name = "Royal Villa",
                            Occupancy = 3,
                            Rate = 100.0,
                            Sqft = 200,
                            UpdatedDate = new DateTime(2024, 3, 11, 23, 15, 10, 102, DateTimeKind.Local).AddTicks(2169)
                        });
                });

            modelBuilder.Entity("HeavenResort_VillaAPI.Models.VillaNumber", b =>
                {
                    b.Property<int>("VillaNo")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("SpecialDetails")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("VillaID")
                        .HasColumnType("int");

                    b.HasKey("VillaNo");

                    b.HasIndex("VillaID");

                    b.ToTable("VillaNumbers");
                });

            modelBuilder.Entity("HeavenResort_VillaAPI.Models.VillaNumber", b =>
                {
                    b.HasOne("HeavenResort_VillaAPI.Models.Villa", "Villa")
                        .WithMany("VillaNumbers")
                        .HasForeignKey("VillaID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Villa");
                });

            modelBuilder.Entity("HeavenResort_VillaAPI.Models.Villa", b =>
                {
                    b.Navigation("VillaNumbers");
                });
#pragma warning restore 612, 618
        }
    }
}
